#!/bin/bash
NETWORK="$1"
USER_NAME="ubuntu"
PASSWORD="raspberry"
HOST_FILE="./cluster"
INVENTORY_FILE="inventory/hosts.ini"
CONFIG_FILE="$HOME/.ssh/config"
ERROR_FILE="/tmp/ssh-copy_error.txt"
PUBLIC_KEY_FILE="$HOME/.ssh/db_id_rsa"
MASTER_GROUP="master"
MASTER_NODE="server"
WORKER_GROUP="node"
WORKER_NODE="worker"
CLUSTER_NAME="cluster"

nmap -A -T4 -n -p22 -Pn $NETWORK -oG - | awk '/Ubuntu/{print $2}' > $HOST_FILE
HOSTS_NUMBER="$(wc -l $HOST_FILE | awk '{print $1}')"

if [ ! -f $CONFIG_FILE ]; then
    mkdir -p ~/.ssh && chmod 700 ~/.ssh
    touch $CONFIG_FILE
    chmod 600 $CONFIG_FILE
fi

if [ ! -f $PUBLIC_KEY_FILE ]; then
    ssh-keygen -q -t rsa -b 4096 -N "" -f $PUBLIC_KEY_FILE
fi

if [ ! -f  $PUBLIC_KEY_FILE ]; then
    echo "File '$PUBLIC_KEY_FILE' not found!"
    exit 1
fi

if [ ! -f $HOST_FILE ]; then
    echo "File '$HOST_FILE' not found!"
    exit 2
fi
i=1
grep -v '^ *#' < $HOST_FILE | while IFS= read -r IP
do
    if [ $i -eq 1 ]; then
        echo -e "Host server" > $CONFIG_FILE
        {
            echo -e "\tHostname $IP" 
            echo -e "\tUser $USER_NAME"
        } >> $CONFIG_FILE
    else
        {
            echo -e "Host worker-$(($i-1))"
            echo -e "\tHostname $IP"
            echo -e "\tUser $USER_NAME"
        } >> $CONFIG_FILE
    fi
    ssh-copy-id -p 22 -i $PUBLIC_KEY_FILE $USER_NAME@$IP 2>$ERROR_FILE
    ERROR_CODE=$?
    if [ $ERROR_CODE -eq 0 ]; then
        echo "Public key successfully copied to $IP"
    else
        cat $ERROR_FILE
        echo 
        exit 3
    fi
    i=$((i+1))
done

for ((i=1; i<=HOSTS_NUMBER; i++))
do
    if [ $i -eq 1 ]; then
        echo -e "[$MASTER_GROUP]" > $INVENTORY_FILE
    {
        echo -e "$MASTER_NODE" 
        echo -e "[$WORKER_GROUP]"
    } >> $INVENTORY_FILE
    else
        echo -e "$WORKER_NODE-$(($i-1))" >> $INVENTORY_FILE
    fi
done
{
    echo ""
    echo -e "[$CLUSTER_NAME:children]"
    echo -e "$MASTER_GROUP\n$WORKER_GROUP"
    echo -e "[$CLUSTER_NAME:vars]"
    echo -e "ansible_user=$USER_NAME"
    echo -e "ansible_become_method=sudo"
    echo -e "ansible_become_pass=$PASSWORD"
    echo -e "ansible_ssh_private_key_file=$PUBLIC_KEY_FILE"
    echo -e "cfg_static_network=true"
} >> $INVENTORY_FILE
ansible-playbook install_k3s.yaml -i $INVENTORY_FILE
scp server:~/.kube/config ~/.kube/config-cluster
export KUBECONFIG=~/.kube/config-cluster

chmod +x $HOST_FILE 
