---

# Installing k3s on master and respective configurations
# all below are Ansible tasks

- name: Allow tcp/6443 traffic on the master node for all directions
  ufw:
    rule: allow
    to_port: 6443
    proto: tcp

- name: Set Ubuntu hostname for the master (equal to inventory_hostname, i.g., name from the hosts.yaml)
  hostname:
    name: "{{ inventory_hostname }}"
    #previously it was explicitly kpi0x1

- name: Check if k3s already installed
  stat:
    path: /usr/local/bin/k3s
  register: k3s_installed
    
- name: Install k3s on master
  ### 'master' can be recognized by the parameter format as well as by the parameter 'server' in the INSTALL_K3S_EXEC directive
  # --node-taint CriticalAddonsOnly=true:NoExecute will prevent orinary pods to be placed on the control (master) unless 'tolerations'
  # directive will be used in the pod selector section of the deployment (we will see it thr MetalLB/Traefik installation procedure)
  #   on RPi5, CriticalAddonsOnly=true:NoExecute can be suppressed for more powerfull processor of the RPi5 platform
  # note: K3s bundles its own containerd by default, no need to install it separately
  ### enable InPlacePodVerticalScaling capability:
  # curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE="644" INSTALL_K3S_EXEC="=10.42.0.0/16  --kube-apiserver-arg=feature-gates=InPlacePodVerticalScaling=true" sh -
  # for RPi4:      INSTALL_K3S_EXEC="server --node-taint CriticalAddonsOnly=true:NoExecute --write-kubeconfig-mode 644 --disable servicelb --disable-cloud-controller" sh -s -
  # for RPi5:      INSTALL_K3S_EXEC="server --write-kubeconfig-mode 644 --disable servicelb --disable-cloud-controller --kube-apiserver-arg=feature-gates=InPlacePodVerticalScaling=true" sh -s -

  shell:
    cmd: >
      curl -sfL https://get.k3s.io | 
      INSTALL_K3S_VERSION={{ k3s_version }} 
#for RPi4      INSTALL_K3S_EXEC="server --node-taint CriticalAddonsOnly=true:NoExecute --write-kubeconfig-mode 644 --disable servicelb --disable-cloud-controller" sh -s -
      INSTALL_K3S_EXEC="server --node-taint CriticalAddonsOnly=true:NoExecute --write-kubeconfig-mode 644 --disable servicelb --disable-cloud-controller --kube-apiserver-arg=feature-gates=InPlacePodVerticalScaling=true" sh -s -
  when: not k3s_installed.stat.exists

- name: Wait for node-token to be created
  wait_for:
    path: /var/lib/rancher/k3s/server/node-token

- name: Read node-token from master
  slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token

- name: Store node-token
  set_fact:
    token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"

- name: Create directory .kube
  file:
    path: ~{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"

- name: Copy config file to user home directory
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ~{{ ansible_user }}/.kube/config
    remote_src: yes
    owner: "{{ ansible_user }}"

- name: Replace cluster server address from localhost to k3s master IP
  command: >
    k3s kubectl config set-cluster default
      --server=https://{{ master_ip }}:6443
      --kubeconfig ~{{ ansible_user }}/.kube/config
  changed_when: true

- name: Create kubectl symlink
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    state: link

- name: Create crictl symlink
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/crictl
    state: link
